import"../chunks/DsnmJJEf.js";import"../chunks/DUDhBhlh.js";import{p as g,b as h,n as $,t as w,a as b}from"../chunks/B8Aoszw1.js";import{i as y}from"../chunks/D-_nZ1wF.js";import{s as P,a as x}from"../chunks/DoVozA40.js";import{g as _}from"../chunks/Ch0vH5l5.js";import{P as A}from"../chunks/Bt4gQG3w.js";import{u as C}from"../chunks/CyzmgiJC.js";import{s as E}from"../chunks/CbuqClq8.js";import{s as i}from"../chunks/yBE5bFW0.js";import{P as I}from"../chunks/BzEzGBMK.js";const R=s=>{$();var r=w("Add place");b(s,r)};function F(s,r){g(r,!1);const[c,n]=P(),m=()=>x(E,"$storages",c),{createData:l,commitData:d}=C(),u=async t=>{const p=m()[0];if(!p)throw new Error("no storage");const a=await p.createChildIfAbsent("places/");if(a.isError)throw a;const e=await a.resource.createChildIfAbsent(`place-${crypto.randomUUID()}.ttl`);if(e.isError)throw e;const o=l(I,e.uri+"#place",e.resource);o.type=i({"@id":"Place"}),o.geo={type:i({"@id":"GeoCoordinates"}),latitude:t.latitude,longitude:t.longitude},o.name=t.name,t.description&&(o.description=t.description),o.topic=i(...t.topics.map(f=>({"@id":f}))),await d(o),_("list")};y(),A(s,{place:{},get submit(){return R},onsubmit:u}),h(),n()}export{F as component};
