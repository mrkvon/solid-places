import"../chunks/DsnmJJEf.js";import"../chunks/B4oz0gRF.js";import{p as g,b as h,n as $,t as w,a as b}from"../chunks/ZmOcAfe1.js";import{i as y}from"../chunks/g1iHHJON.js";import{s as P,a as x}from"../chunks/FHFy0IG3.js";import{g as _}from"../chunks/edZjVe5c.js";import{r as A}from"../chunks/Cl4vGSiG.js";import{P as C}from"../chunks/DbH0YAOb.js";import{u as E}from"../chunks/CFXNJ6MW.js";import{s as I}from"../chunks/DsmgBH3g.js";import{s as i}from"../chunks/DMjnpqdT.js";import{P as v}from"../chunks/BzEzGBMK.js";const R=s=>{$();var r=w("Add place");b(s,r)};function J(s,r){g(r,!1);const[c,n]=P(),m=()=>x(I,"$storages",c),{createData:l,commitData:d}=E(),u=async t=>{const p=m()[0];if(!p)throw new Error("no storage");const a=await p.createChildIfAbsent("places/");if(a.isError)throw a;const e=await a.resource.createChildIfAbsent(`place-${crypto.randomUUID()}.ttl`);if(e.isError)throw e;const o=l(v,e.uri+"#place",e.resource);o.type=i({"@id":"Place"}),o.geo={type:i({"@id":"GeoCoordinates"}),latitude:t.latitude,longitude:t.longitude},o.name=t.name,t.description&&(o.description=t.description),o.topic=i(...t.topics.map(f=>({"@id":f}))),await d(o),_(A("/list"))};y(),C(s,{place:{},get submit(){return R},onsubmit:u}),h(),n()}export{J as component};
